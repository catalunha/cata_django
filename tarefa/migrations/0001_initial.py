# Generated by Django 2.0.4 on 2018-07-26 21:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tarefa.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('instituicao', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('situacao', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Algoritmo',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativo')),
                ('tempo', models.TimeField(blank=True, default=datetime.time(2, 0), help_text='...', null=True, verbose_name='Tempo')),
                ('nota', models.PositiveSmallIntegerField(default=1, help_text='...', verbose_name='Nota')),
                ('numero', models.IntegerField(editable=False, verbose_name='Numero')),
            ],
            options={
                'verbose_name': 'Algoritmo',
                'verbose_name_plural': 'Algoritmos',
                'ordering': ['avaliacao__nome', 'programa__referencia'],
            },
        ),
        migrations.CreateModel(
            name='Anexo',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('anexo', models.FileField(blank=True, default=None, help_text='...', upload_to=tarefa.models.arquivo_questao, verbose_name='Arquivo:')),
                ('nota', models.PositiveSmallIntegerField(blank=True, default=None, help_text='...', null=True, verbose_name='Nota')),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Anexo',
                'verbose_name_plural': 'Anexos',
                'ordering': ['aplicada', 'arquivo'],
            },
        ),
        migrations.CreateModel(
            name='Aplicada',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Questao Aplicada',
                'verbose_name_plural': 'Questões Aplicadas',
                'ordering': ['usuario__username', 'questao__problema__referencia'],
            },
        ),
        migrations.CreateModel(
            name='Aplicado',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('algoritmo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicados', to='tarefa.Algoritmo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicados_usuario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Algoritmo Aplicado',
                'verbose_name_plural': 'Algoritmos Aplicados',
                'ordering': ['usuario__username', 'algoritmo__programa__referencia'],
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('inicio', models.DateTimeField(help_text='...', verbose_name='Data Início')),
                ('fim', models.DateTimeField(help_text='...', verbose_name='Data Fim')),
                ('privada', models.BooleanField(default=True)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('nota', models.PositiveSmallIntegerField(default=1, help_text='...', verbose_name='Nota')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='instituicao.Turma')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['turma', 'nome', 'inicio'],
            },
        ),
        migrations.CreateModel(
            name='Codigo',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conteudo', models.TextField(blank=True, default=None, help_text='...', null=True, verbose_name='Conteúdo do arquivo')),
                ('nota', models.PositiveSmallIntegerField(blank=True, default=None, help_text='...', null=True, verbose_name='Nota')),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('aplicado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codigos_aplicado', to='tarefa.Aplicado')),
                ('proposta', models.ForeignKey(help_text='...', on_delete=django.db.models.deletion.CASCADE, related_name='codigos_proposta', to='situacao.Proposta')),
            ],
            options={
                'verbose_name': 'Codigo',
                'verbose_name_plural': 'Codigos',
            },
        ),
        migrations.CreateModel(
            name='Questao',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('tentativa', models.PositiveSmallIntegerField(blank=True, default=3, help_text='...', null=True, verbose_name='Tentativa')),
                ('tempo', models.TimeField(blank=True, default=datetime.time(2, 0), help_text='...', null=True, verbose_name='Tempo')),
                ('nota', models.PositiveSmallIntegerField(default=1, help_text='...', verbose_name='Nota')),
                ('numero', models.IntegerField(editable=False, verbose_name='Numero')),
                ('avaliacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questoes', related_query_name='campo_avaliacao', to='tarefa.Avaliacao')),
                ('problema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='na_questao', to='situacao.Problema')),
            ],
            options={
                'verbose_name': 'Questão',
                'verbose_name_plural': 'Questões',
                'ordering': ['avaliacao__nome', 'problema__referencia'],
            },
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relatorio', models.TextField(blank=True, default=None, help_text='...', null=True, verbose_name='Relatório:')),
                ('nota', models.PositiveSmallIntegerField(blank=True, default=None, help_text='...', null=True, verbose_name='Nota')),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('aplicada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_aplicada', to='tarefa.Aplicada')),
                ('texto', models.ForeignKey(help_text='...', on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_texto', to='situacao.Texto')),
            ],
            options={
                'verbose_name': 'Relatório',
                'verbose_name_plural': 'Relatórios',
                'ordering': ['aplicada', 'texto'],
            },
        ),
        migrations.CreateModel(
            name='Solucao',
            fields=[
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('editado_em', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ativo', models.BooleanField(default=True, help_text='...', verbose_name='Ativa')),
                ('solucao', models.CharField(blank=True, default=None, help_text='...', max_length=255, null=True, verbose_name='Valor')),
                ('nota', models.PositiveSmallIntegerField(blank=True, default=None, help_text='...', null=True, verbose_name='Nota')),
                ('aplicada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solucoes_aplicada', to='tarefa.Aplicada')),
                ('resposta', models.ForeignKey(help_text='...', on_delete=django.db.models.deletion.CASCADE, related_name='solucoes_resposta', to='situacao.Resposta')),
            ],
            options={
                'verbose_name': 'Solução',
                'verbose_name_plural': 'Soluções',
                'ordering': ['aplicada', 'resposta'],
            },
        ),
        migrations.AddField(
            model_name='aplicada',
            name='questao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicadas', to='tarefa.Questao'),
        ),
        migrations.AddField(
            model_name='aplicada',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aplicadas_usuario', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='anexo',
            name='aplicada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anexos_aplicada', to='tarefa.Aplicada'),
        ),
        migrations.AddField(
            model_name='anexo',
            name='arquivo',
            field=models.ForeignKey(help_text='...', on_delete=django.db.models.deletion.CASCADE, related_name='anexos_arquivo', to='situacao.Arquivo'),
        ),
        migrations.AddField(
            model_name='algoritmo',
            name='avaliacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='algoritmos', to='tarefa.Avaliacao'),
        ),
        migrations.AddField(
            model_name='algoritmo',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='no_algoritmo', to='situacao.Programa'),
        ),
        migrations.AlterUniqueTogether(
            name='solucao',
            unique_together={('aplicada', 'resposta')},
        ),
        migrations.AlterUniqueTogether(
            name='relatorio',
            unique_together={('aplicada', 'texto')},
        ),
        migrations.AlterUniqueTogether(
            name='codigo',
            unique_together={('aplicado', 'proposta')},
        ),
        migrations.AlterUniqueTogether(
            name='avaliacao',
            unique_together={('turma', 'nome')},
        ),
        migrations.AlterUniqueTogether(
            name='aplicado',
            unique_together={('usuario', 'algoritmo')},
        ),
        migrations.AlterUniqueTogether(
            name='aplicada',
            unique_together={('usuario', 'questao')},
        ),
        migrations.AlterUniqueTogether(
            name='anexo',
            unique_together={('aplicada', 'arquivo')},
        ),
    ]
